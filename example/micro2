#!/bin/zsh

body() {

if [[ $1 == "" ]]
then
	echo "NO"
	return
fi


if [[ $1 == "start" ]]
then
  prefix="m"
  if [[ $3 != "" ]] ; then
    prefix="$3"
  fi
  addr="9"
  if [[ $4 != "" ]] ; then
    addr="$4"
  fi


	DQLITE_SOCKET=@micro0.dqlite /root/go/bin/microd --state-dir /${prefix}aw0 2>&1 --verbose &
	/root/go/bin/microctl waitready --state-dir /${prefix}aw0

	/root/go/bin/microctl init --bootstrap --state-dir /${prefix}aw0 ${prefix}aw0 127.0.0.1:${addr}000
	echo "Bootstrapped First Node"
 # /root/go/bin/microctl sql "create table test (id integer primary key autoincrement not null, uuid integer not null, key text, value text, unique (uuid, key));" --state-dir /${prefix}aw0
	for i in `seq 1 $2`; do
		mkdir /${prefix}aw$i
		DQLITE_SOCKET=@micro$i.dqlite /root/go/bin/microd --state-dir /${prefix}aw$i --verbose &
  	/root/go/bin/microctl waitready --state-dir /${prefix}aw$i
		echo "Daemon at state dir /${prefix}aw$i created."
	done

	for i in `seq 1 $2`; do
    token=$(/root/go/bin/microctl --state-dir /${prefix}aw0 tokens add "${prefix}aw$i"_token)
    echo Secret Requested.
		/root/go/bin/microctl init --token ${token} --state-dir /${prefix}aw$i ${prefix}aw$i 127.0.0.1:${addr}00$i
		echo Member $i joined.
	done

#STATE_DIR=/maw0 microctl sql "insert into certificates (fingerprint, type, name, certificate) values ('maw1','baw1','paw1','caw1')"
#STATE_DIR=/maw0 microctl sql "insert into certificates (fingerprint, type, name, certificate) values ('maw2','baw2','paw2','caw2')"
#STATE_DIR=/maw0 microctl sql "insert into certificates (fingerprint, type, name, certificate) values ('maw3','baw3','paw3','caw3')"
elif [[ $1 == "kill" ]]
then
  prefix="$2"
	ps -ef | grep -e microd | grep -v grep  | awk '{print $2}' | xargs kill -9
	rm -rf /${prefix}aw*

fi
}

body $@
